{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","window","addEventListener","onScroll","removeEventListener","initial","then","onComicsListLoaded","scrollY","document","documentElement","clientHeight","scrollHeight","newComicsList","ended","_toConsumableArray","arr","item","i","CSSTransition","timeout","classNames","Link","to","TransitionGroup","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","ComicsLis"],"mappings":"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","file":"static/js/5.690c59fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img\r\n         src={img}\r\n         style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }}\r\n         alt=\"Error\"\r\n      />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n   const { loading, error, request, clearError } = useHttp()\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n   const _apiKey = 'apikey=e86591788d711f875b3cf193ec08cc92'\r\n   const _baseOffset = 350\r\n\r\n   const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n      return _transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   const getAllComics = async (offset = 0) => {\r\n      const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformComics)\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n      return _transformComics(res.data.results[0])\r\n   }\r\n\r\n   const _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description\r\n            ? `${char.description.slice(0, 210)}...`\r\n            : 'There is no description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items,\r\n      }\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n      return {\r\n         id: comics.id,\r\n         title: comics.title,\r\n         description: comics.description || 'There is no description',\r\n         pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n         thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n         language: comics.textObjects[0]?.language || 'en-us',\r\n         price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n      }\r\n   }\r\n\r\n   return {\r\n      loading,\r\n      error,\r\n      clearError,\r\n      getAllCharacters,\r\n      getCharacter,\r\n      getAllComics,\r\n      getComic,\r\n   }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n   const [loading, setLoading] = useState(false)\r\n   const [error, setError] = useState(null)\r\n\r\n   const request = useCallback(\r\n      async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n         setLoading(true)\r\n\r\n         try {\r\n            const response = await fetch(url, { method, body, headers })\r\n\r\n            if (!response.ok) {\r\n               throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setLoading(false)\r\n            return data\r\n         } catch (error) {\r\n            setLoading(false)\r\n            setError(error.message)\r\n            throw error\r\n         }\r\n      },\r\n      []\r\n   )\r\n\r\n   const clearError = useCallback(() => setError(null), [])\r\n\r\n   return { loading, error, request, clearError }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage'\n\nimport './comicsList.scss'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst ComicsList = () => {\n   const [comicsList, setComicsList] = useState([])\n   const [newItemLoading, setnewItemLoading] = useState(false)\n   const [offset, setOffset] = useState(0)\n   const [comicsEnded, setComicsEnded] = useState(false)\n\n   const { loading, error, getAllComics } = useMarvelService()\n\n   const duration = 400\n\n   useEffect(() => {\n      onRequest(offset, true)\n   }, [])\n\n   useEffect(() => {\n      window.addEventListener('scroll', onScroll)\n      return () => window.removeEventListener('scroll', onScroll)\n   })\n\n   const onRequest = (offset, initial) => {\n      initial ? setnewItemLoading(false) : setnewItemLoading(true)\n      getAllComics(offset).then(onComicsListLoaded)\n   }\n\n   const debounce = (fn, ms) => {\n      return function () {\n         setTimeout(() => fn.apply(this, arguments), ms)\n      }\n   }\n\n   const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n         debounce(onRequest(offset), 300)\n      }\n   }\n\n   const onComicsListLoaded = (newComicsList) => {\n      let ended = false\n      if (newComicsList.length < 8) {\n         ended = true\n      }\n      setComicsList([...comicsList, ...newComicsList])\n      setnewItemLoading(false)\n      setOffset(offset + 8)\n      setComicsEnded(ended)\n   }\n\n   function renderItems(arr) {\n      const items = arr.map((item, i) => {\n         return (\n            <CSSTransition timeout={duration} classNames=\"comics__item\" key={i}>\n               <Link to={`/comics/${item.id}`}>\n                  <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                  <div className=\"comics__item-name\">{item.title}</div>\n                  <div className=\"comics__item-price\">{item.price}</div>\n               </Link>\n            </CSSTransition>\n         )\n      })\n\n      return <TransitionGroup className=\"comics__grid\">{items}</TransitionGroup>\n   }\n\n   const items = renderItems(comicsList)\n\n   const errorMessage = error ? <ErrorMessage /> : null\n   const spinner = loading && !newItemLoading ? <Spinner /> : null\n\n   return (\n      <div className=\"comics__list\">\n         {errorMessage}\n         {spinner}\n         {items}\n         <button\n            disabled={newItemLoading}\n            style={{ display: comicsEnded ? 'none' : 'block' }}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}\n         >\n            <div className=\"inner\">load more</div>\n         </button>\n      </div>\n   )\n}\n\nexport default ComicsList\n","import AppBanner from '../appBanner/AppBanner'\r\nimport ComicsLis from '../comicsList/ComicsList'\r\n\r\nconst ComicsPage = () => {\r\n   return (\r\n      <>\r\n         <AppBanner />\r\n         <ComicsLis />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage\r\n"],"sourceRoot":""}