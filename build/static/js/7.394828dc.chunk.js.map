{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","SinglePage","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded"],"mappings":"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","file":"static/js/7.394828dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img\r\n         src={img}\r\n         style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }}\r\n         alt=\"Error\"\r\n      />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n   const { request, clearError, process, setProcess } = useHttp()\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n   const _apiKey = 'apikey=e86591788d711f875b3cf193ec08cc92'\r\n   const _baseOffset = 350\r\n\r\n   const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacterByName = async (name) => {\r\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n      return _transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   const getAllComics = async (offset = 0) => {\r\n      const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformComics)\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n      return _transformComics(res.data.results[0])\r\n   }\r\n\r\n   const _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description\r\n            ? `${char.description.slice(0, 210)}...`\r\n            : 'There is no description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items,\r\n      }\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n      return {\r\n         id: comics.id,\r\n         title: comics.title,\r\n         description: comics.description || 'There is no description',\r\n         pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n         thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n         language: comics.textObjects[0]?.language || 'en-us',\r\n         price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n      }\r\n   }\r\n\r\n   return {\r\n      clearError,\r\n      process,\r\n      setProcess,\r\n      getAllCharacters,\r\n      getCharacterByName,\r\n      getCharacter,\r\n      getAllComics,\r\n      getComic,\r\n   }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n   const [process, setProcess] = useState('waiting')\r\n\r\n   const request = useCallback(\r\n      async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n         setProcess('loading')\r\n\r\n         try {\r\n            const response = await fetch(url, { method, body, headers })\r\n\r\n            if (!response.ok) {\r\n               throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            return data\r\n         } catch (error) {\r\n            setProcess('error')\r\n\r\n            throw error\r\n         }\r\n      },\r\n      []\r\n   )\r\n\r\n   const clearError = useCallback(() => {\r\n      setProcess('loading')\r\n   }, [])\r\n\r\n   return { request, clearError, process, setProcess }\r\n}\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from '../components/errorMessage/errorMessage'\r\nimport Spinner from '../components/spinner/Spinner'\r\nimport Skeleton from '../components/skeleton/Skeleton'\r\n\r\nconst setContent = (process, Component, data) => {\r\n   switch (process) {\r\n      case 'waiting':\r\n         return <Skeleton />\r\n         break\r\n      case 'loading':\r\n         return <Spinner />\r\n         break\r\n      case 'confirmed':\r\n         return <Component data={data} />\r\n         break\r\n      case 'error':\r\n         return <ErrorMessage />\r\n         break\r\n      default:\r\n         throw new Error('Unexpected process state')\r\n         break\r\n   }\r\n}\r\n\r\nexport default setContent\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport setContent from '../../utils/setContent'\nimport AppBanner from '../appBanner/AppBanner'\n\nconst SinglePage = ({ Component, dataType }) => {\n   const { id } = useParams()\n   const [data, setData] = useState(null)\n   const { getComic, getCharacter, clearError, process, setProcess } = useMarvelService()\n\n   useEffect(() => {\n      updateData()\n   }, [id])\n\n   const updateData = () => {\n      clearError()\n\n      switch (dataType) {\n         case 'comic':\n            getComic(id)\n               .then(onDataLoaded)\n               .then(() => setProcess('confirmed'))\n            break\n         case 'character':\n            getCharacter(id)\n               .then(onDataLoaded)\n               .then(() => setProcess('confirmed'))\n      }\n   }\n\n   const onDataLoaded = (data) => {\n      setData(data)\n   }\n\n   return (\n      <>\n         <AppBanner />\n         {setContent(process, Component, data)}\n      </>\n   )\n}\n\nexport default SinglePage\n"],"sourceRoot":""}