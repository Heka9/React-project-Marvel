{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","loading","error","useEffect","onRequest","window","addEventListener","onScroll","removeEventListener","initial","then","onComicsListLoaded","scrollY","document","documentElement","clientHeight","scrollHeight","newComicsList","ended","_toConsumableArray","arr","item","i","CSSTransition","timeout","classNames","Link","to","TransitionGroup","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content","ComicsLis"],"mappings":"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","file":"static/js/8.6b08783f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img\r\n         src={img}\r\n         style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }}\r\n         alt=\"Error\"\r\n      />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n   const { request, clearError, process, setProcess } = useHttp()\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n   const _apiKey = 'apikey=e86591788d711f875b3cf193ec08cc92'\r\n   const _baseOffset = 350\r\n\r\n   const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacterByName = async (name) => {\r\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n      return _transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   const getAllComics = async (offset = 0) => {\r\n      const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformComics)\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n      return _transformComics(res.data.results[0])\r\n   }\r\n\r\n   const _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description\r\n            ? `${char.description.slice(0, 210)}...`\r\n            : 'There is no description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items,\r\n      }\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n      return {\r\n         id: comics.id,\r\n         title: comics.title,\r\n         description: comics.description || 'There is no description',\r\n         pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n         thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n         language: comics.textObjects[0]?.language || 'en-us',\r\n         price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n      }\r\n   }\r\n\r\n   return {\r\n      clearError,\r\n      process,\r\n      setProcess,\r\n      getAllCharacters,\r\n      getCharacterByName,\r\n      getCharacter,\r\n      getAllComics,\r\n      getComic,\r\n   }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n   const [process, setProcess] = useState('waiting')\r\n\r\n   const request = useCallback(\r\n      async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n         setProcess('loading')\r\n\r\n         try {\r\n            const response = await fetch(url, { method, body, headers })\r\n\r\n            if (!response.ok) {\r\n               throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            return data\r\n         } catch (error) {\r\n            setProcess('error')\r\n\r\n            throw error\r\n         }\r\n      },\r\n      []\r\n   )\r\n\r\n   const clearError = useCallback(() => {\r\n      setProcess('loading')\r\n   }, [])\r\n\r\n   return { request, clearError, process, setProcess }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage'\n\nimport './comicsList.scss'\n\nconst setContent = (process, Component, newItemLoading) => {\n   switch (process) {\n      case 'waiting':\n         return <Spinner />\n         break\n      case 'loading':\n         return newItemLoading ? <Component /> : <Spinner />\n         break\n      case 'confirmed':\n         return <Component />\n         break\n      case 'error':\n         return <ErrorMessage />\n         break\n      default:\n         throw new Error('Unexpected process state')\n         break\n   }\n}\n\nconst ComicsList = () => {\n   const [comicsList, setComicsList] = useState([])\n   const [newItemLoading, setnewItemLoading] = useState(false)\n   const [offset, setOffset] = useState(0)\n   const [comicsEnded, setComicsEnded] = useState(false)\n\n   const { loading, error, getAllComics, process, setProcess } = useMarvelService()\n\n   const duration = 400\n\n   useEffect(() => {\n      onRequest(offset, true)\n   }, [])\n\n   useEffect(() => {\n      window.addEventListener('scroll', onScroll)\n      return () => window.removeEventListener('scroll', onScroll)\n   })\n\n   const onRequest = (offset, initial) => {\n      initial ? setnewItemLoading(false) : setnewItemLoading(true)\n      getAllComics(offset)\n         .then(onComicsListLoaded)\n         .then(() => setProcess('confirmed'))\n   }\n\n   const debounce = (fn, ms) => {\n      return function () {\n         setTimeout(() => fn.apply(this, arguments), ms)\n      }\n   }\n\n   const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n         debounce(onRequest(offset), 300)\n      }\n   }\n\n   const onComicsListLoaded = (newComicsList) => {\n      let ended = false\n      if (newComicsList.length < 8) {\n         ended = true\n      }\n      setComicsList([...comicsList, ...newComicsList])\n      setnewItemLoading(false)\n      setOffset(offset + 8)\n      setComicsEnded(ended)\n   }\n\n   function renderItems(arr) {\n      const items = arr.map((item, i) => {\n         return (\n            <CSSTransition timeout={duration} classNames=\"comics__item\" key={i}>\n               <Link to={`/comics/${item.id}`}>\n                  <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                  <div className=\"comics__item-name\">{item.title}</div>\n                  <div className=\"comics__item-price\">{item.price}</div>\n               </Link>\n            </CSSTransition>\n         )\n      })\n\n      return <TransitionGroup className=\"comics__grid\">{items}</TransitionGroup>\n   }\n\n   return (\n      <div className=\"comics__list\">\n         {setContent(process, () => renderItems(comicsList), newItemLoading)}\n         <button\n            disabled={newItemLoading}\n            style={{ display: comicsEnded ? 'none' : 'block' }}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}\n         >\n            <div className=\"inner\">load more</div>\n         </button>\n      </div>\n   )\n}\n\nexport default ComicsList\n","import { Helmet } from 'react-helmet'\r\nimport AppBanner from '../appBanner/AppBanner'\r\nimport ComicsLis from '../comicsList/ComicsList'\r\n\r\nconst ComicsPage = () => {\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\" content=\"Page with different comics\" />\r\n            <title>Comics page</title>\r\n         </Helmet>\r\n         <AppBanner />\r\n         <ComicsLis />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage\r\n"],"sourceRoot":""}