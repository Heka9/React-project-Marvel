{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/CharSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","classes","includes","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","Spinner","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","window","addEventListener","onScroll","removeEventListener","scrollY","document","documentElement","clientHeight","scrollHeight","initialRequest","onLoadedCharacters","ended","_toConsumableArray","myRefs","useRef","onItemClick","current","forEach","item","classList","remove","add","focus","array","index","styles","CSSTransition","timeout","classNames","ref","div","tabIndex","onCharSelected","onKeyDown","e","key","TransitionGroup","renderItems","disabled","Skeleton","_Fragment","comicsInner","i","CharInfo","charId","CharSearchForm","errorMessage","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","setSelectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/6.c22ded75.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img\r\n         src={img}\r\n         style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }}\r\n         alt=\"Error\"\r\n      />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n   const { loading, error, request, clearError } = useHttp()\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n   const _apiKey = 'apikey=e86591788d711f875b3cf193ec08cc92'\r\n   const _baseOffset = 350\r\n\r\n   const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacterByName = async (name) => {\r\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n      return res.data.results.map(_transformCharacter)\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n      return _transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   const getAllComics = async (offset = 0) => {\r\n      const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(_transformComics)\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n      return _transformComics(res.data.results[0])\r\n   }\r\n\r\n   const _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description\r\n            ? `${char.description.slice(0, 210)}...`\r\n            : 'There is no description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items,\r\n      }\r\n   }\r\n\r\n   const _transformComics = (comics) => {\r\n      return {\r\n         id: comics.id,\r\n         title: comics.title,\r\n         description: comics.description || 'There is no description',\r\n         pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n         thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n         language: comics.textObjects[0]?.language || 'en-us',\r\n         price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n      }\r\n   }\r\n\r\n   return {\r\n      loading,\r\n      error,\r\n      clearError,\r\n      getAllCharacters,\r\n      getCharacterByName,\r\n      getCharacter,\r\n      getAllComics,\r\n      getComic,\r\n   }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n   const [loading, setLoading] = useState(false)\r\n   const [error, setError] = useState(null)\r\n\r\n   const request = useCallback(\r\n      async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n         setLoading(true)\r\n\r\n         try {\r\n            const response = await fetch(url, { method, body, headers })\r\n\r\n            if (!response.ok) {\r\n               throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setLoading(false)\r\n            return data\r\n         } catch (error) {\r\n            setLoading(false)\r\n            setError(error.message)\r\n            throw error\r\n         }\r\n      },\r\n      []\r\n   )\r\n\r\n   const clearError = useCallback(() => setError(null), [])\r\n\r\n   return { loading, error, request, clearError }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage'\nimport useMarvelService from '../../services/MarvelService'\nimport './randomChar.scss'\nimport mjolnir from '../../resources/img/mjolnir.png'\n\nconst RandomChar = () => {\n   const [char, setChar] = useState({})\n\n   const { loading, error, getCharacter, clearError } = useMarvelService()\n\n   useEffect(() => {\n      updateChar()\n\n      const timerId = setInterval(updateChar, 60000)\n\n      return () => {\n         clearInterval(timerId)\n      }\n   }, [])\n\n   const onCharLoaded = (char) => {\n      setChar(char)\n   }\n\n   const updateChar = () => {\n      clearError()\n      const id = 1011000 + Math.floor(Math.random() * (1011400 - 1011000 + 1))\n      getCharacter(id).then(onCharLoaded)\n   }\n\n   return (\n      <div className=\"randomchar\">\n         {loading ? <Spinner /> : error ? <ErrorMessage /> : <View char={char} />}\n         <div className=\"randomchar__static\">\n            <p className=\"randomchar__title\">\n               Random character for today!\n               <br />\n               Do you want to get to know him better?\n            </p>\n            <p className=\"randomchar__title\">Or choose another one</p>\n            <button className=\"button button__main\" onClick={updateChar}>\n               <div className=\"inner\">try it</div>\n            </button>\n            <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n         </div>\n      </div>\n   )\n}\n\nfunction View({ char }) {\n   const { name, description, thumbnail, homepage, wiki } = char\n\n   let classes\n   if (thumbnail) {\n      classes = thumbnail.includes('image_not_available')\n         ? 'randomchar__img randomchar__img_contain'\n         : 'randomchar__img randomchar__img_cover'\n   }\n\n   return (\n      <div className=\"randomchar__block\">\n         <img src={thumbnail} alt=\"Random character\" className={classes} />\n         <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">{description}</p>\n            <div className=\"randomchar__btns\">\n               <a href={homepage} className=\"button button__main\">\n                  <div className=\"inner\">homepage</div>\n               </a>\n               <a href={wiki} className=\"button button__secondary\">\n                  <div className=\"inner\">Wiki</div>\n               </a>\n            </div>\n         </div>\n      </div>\n   )\n}\nexport default RandomChar\n","import { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/errorMessage'\nimport './charList.scss'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst CharList = (props) => {\n   const [charList, setCharList] = useState([])\n   const [newItemLoading, setNewItemLoading] = useState(false)\n   const [offset, setOffset] = useState(350)\n   const [charEnded, setCharEnded] = useState(false)\n\n   const { loading, error, getAllCharacters } = useMarvelService()\n\n   const duration = 400\n\n   useEffect(() => {\n      onRequest(offset, true)\n   }, [])\n\n   useEffect(() => {\n      window.addEventListener('scroll', onScroll)\n      return () => window.removeEventListener('scroll', onScroll)\n   })\n\n   const debounce = (fn, ms) => {\n      return function () {\n         setTimeout(() => fn.apply(this, arguments), ms)\n      }\n   }\n\n   const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n         debounce(onRequest(offset), 300)\n      }\n   }\n\n   const onRequest = (offset, initialRequest) => {\n      initialRequest ? setNewItemLoading(false) : setNewItemLoading(true)\n      getAllCharacters(offset).then(onLoadedCharacters)\n   }\n\n   const onLoadedCharacters = (data) => {\n      let ended = false\n      if (data.length < 9) {\n         ended = true\n      }\n\n      setCharList((charList) => [...charList, ...data])\n\n      setNewItemLoading(false)\n      setOffset((offset) => offset + 9)\n      setCharEnded(ended)\n   }\n\n   const myRefs = useRef([])\n\n   const onItemClick = (id) => {\n      myRefs.current.forEach((item) => item.classList.remove('char__item_selected'))\n      myRefs.current[id].classList.add('char__item_selected')\n      myRefs.current[id].focus()\n   }\n\n   const renderItems = (array) => {\n      const items = array.map((item, index) => {\n         let styles = { objectFit: 'cover' }\n\n         if (item.thumbnail.includes('image_not_available')) {\n            styles = { objectFit: 'contain' }\n         }\n\n         return (\n            <CSSTransition timeout={duration} classNames=\"char__item\" key={index}>\n               <div\n                  ref={(div) => (myRefs.current[index] = div)}\n                  tabIndex={0}\n                  className=\"char__item\"\n                  onClick={() => {\n                     props.onCharSelected(item.id)\n                     onItemClick(index)\n                  }}\n                  onKeyDown={(e) => {\n                     if (e.key === ' ' || e.key === 'Enter') {\n                        props.onCharSelected(item.id)\n                        onItemClick(index)\n                     }\n                  }}\n               >\n                  <img src={item.thumbnail} alt={item.name} style={styles} />\n                  <div className=\"char__name\">{item.name}</div>\n               </div>\n            </CSSTransition>\n         )\n      })\n      return <TransitionGroup className=\"char__grid\">{items}</TransitionGroup>\n   }\n\n   return (\n      <div className=\"char__list\">\n         {loading && !newItemLoading ? <Spinner /> : error ? <ErrorMessage /> : renderItems(charList)}\n         <button\n            disabled={newItemLoading}\n            onClick={() => onRequest(offset)}\n            className=\"button button__main button__long\"\n            style={{ display: charEnded ? 'none' : 'block' }}\n         >\n            <div className=\"inner\">load more</div>\n         </button>\n      </div>\n   )\n}\n\nCharList.propTypes = {\n   onCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport ErrorMessage from '../errorMessage/errorMessage'\nimport Spinner from '../spinner/Spinner'\nimport useMarvelService from '../../services/MarvelService'\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss'\n\nconst CharInfo = (props) => {\n   const [char, setChar] = useState(null)\n\n   const { loading, error, getCharacter, clearError } = useMarvelService()\n\n   useEffect(() => {\n      updateChar()\n   }, [props.charId])\n\n   const updateChar = () => {\n      const { charId } = props\n      if (!charId) {\n         return\n      }\n\n      clearError()\n      getCharacter(charId).then(onCharLoaded)\n   }\n\n   const onCharLoaded = (char) => {\n      setChar(char)\n   }\n\n   if (!props.charId) {\n      return (\n         <div className=\"char__info\">\n            <Skeleton />\n         </div>\n      )\n   } else {\n      return (\n         <div className=\"char__info\">\n            {loading ? <Spinner /> : error ? <ErrorMessage /> : char ? <View char={char} /> : null}\n         </div>\n      )\n   }\n}\n\nconst View = ({ char }) => {\n   const { name, description, thumbnail, homepage, wiki, comics } = char\n\n   let styles = { objectFit: 'cover' }\n\n   if (thumbnail.includes('image_not_available')) {\n      styles = { objectFit: 'contain' }\n   }\n\n   let comicsInner\n\n   if (comics.length === 0) {\n      comicsInner = 'Comics not found'\n   } else if (comics.length > 10) {\n      const newComics = comics.slice(0, 10)\n      comicsInner = newComics.map((item, i) => {\n         return (\n            <li key={i} className=\"char__comics-item\">\n               {item.name}\n            </li>\n         )\n      })\n   } else {\n      comicsInner = comics.map((item, i) => {\n         return (\n            <li key={i} className=\"char__comics-item\">\n               {item.name}\n            </li>\n         )\n      })\n   }\n\n   return (\n      <>\n         <div className=\"char__basics\">\n            <img src={thumbnail} alt={name} style={styles} />\n            <div>\n               <div className=\"char__info-name\">{name}</div>\n               <div className=\"char__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n                  </a>\n               </div>\n            </div>\n         </div>\n         <div className=\"char__descr\">{description}</div>\n         <div className=\"char__comics\">Comics:</div>\n         <ul className=\"char__comics-list\">{comicsInner}</ul>\n      </>\n   )\n}\n\nCharInfo.propTypes = {\n   charId: PropTypes.number,\n}\n\nexport default CharInfo\n","import { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport ErrorMessage from '../errorMessage/errorMessage'\r\n\r\nimport './charSearchForm.scss'\r\n\r\nconst CharSearchForm = () => {\r\n   const [char, setChar] = useState(null)\r\n   const { loading, error, getCharacterByName, clearError } = useMarvelService()\r\n\r\n   const onCharLoaded = (char) => {\r\n      setChar(char)\r\n   }\r\n\r\n   const updateChar = (name) => {\r\n      clearError()\r\n\r\n      getCharacterByName(name).then(onCharLoaded)\r\n   }\r\n\r\n   const errorMessage = error ? (\r\n      <div className=\"char__search-critical-error\">\r\n         <ErrorMessage />\r\n      </div>\r\n   ) : null\r\n   const results = !char ? null : char.length > 0 ? (\r\n      <div className=\"char__search-wrapper\">\r\n         <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n         <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n            <div className=\"inner\">To page</div>\r\n         </Link>\r\n      </div>\r\n   ) : (\r\n      <div className=\"char__search-error\">The character was not found. Check the name and try again</div>\r\n   )\r\n\r\n   return (\r\n      <div className=\"char__search-form\">\r\n         <Formik\r\n            initialValues={{\r\n               charName: '',\r\n            }}\r\n            validationSchema={Yup.object({\r\n               charName: Yup.string().required('This field is required'),\r\n            })}\r\n            onSubmit={({ charName }) => {\r\n               updateChar(charName)\r\n            }}\r\n         >\r\n            <Form>\r\n               <label className=\"char__search-label\" htmlFor=\"charName\">\r\n                  Or find a character by name:\r\n               </label>\r\n               <div className=\"char__search-wrapper\">\r\n                  <Field id=\"charName\" name=\"charName\" type=\"text\" placeholder=\"Enter name\" />\r\n                  <button type=\"submit\" className=\"button button__main\" disabled={loading}>\r\n                     <div className=\"inner\">find</div>\r\n                  </button>\r\n               </div>\r\n               <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n            </Form>\r\n         </Formik>\r\n         {results}\r\n         {errorMessage}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CharSearchForm\r\n","import { Component } from 'react/cjs/react.production.min'\r\nimport ErrorMessage from '../errorMessage/errorMessage'\r\n\r\nclass ErrorBoundary extends Component {\r\n   state = {\r\n      error: false,\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      console.log(error, errorInfo)\r\n\r\n      this.setState({ error: true })\r\n   }\r\n\r\n   render() {\r\n      if (this.state.error) {\r\n         return <ErrorMessage />\r\n      }\r\n\r\n      return this.props.children\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport RandomChar from '../randomChar/RandomChar'\r\nimport CharList from '../charList/CharList'\r\nimport CharInfo from '../charInfo/CharInfo'\r\nimport CharSearchForm from '../CharSearchForm/CharSearchForm'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\n\r\nimport decoration from '../../resources/img/vision.png'\r\n\r\nconst MainPage = () => {\r\n   const [selectedChar, setSelectedChar] = useState(null)\r\n\r\n   const onCharSelected = (id) => {\r\n      setSelectedChar(id)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\" content=\"Marvel information portal\" />\r\n            <title>Marvel information portal</title>\r\n         </Helmet>\r\n         <ErrorBoundary>\r\n            <RandomChar />\r\n         </ErrorBoundary>\r\n         <div className=\"char__content\">\r\n            <ErrorBoundary>\r\n               <CharList onCharSelected={onCharSelected} />\r\n            </ErrorBoundary>\r\n            <div>\r\n               <ErrorBoundary>\r\n                  <CharInfo charId={selectedChar} />\r\n               </ErrorBoundary>\r\n               <ErrorBoundary>\r\n                  <CharSearchForm />\r\n               </ErrorBoundary>\r\n            </div>\r\n         </div>\r\n         <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default MainPage\r\n"],"sourceRoot":""}